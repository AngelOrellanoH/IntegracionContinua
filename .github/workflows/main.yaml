name: Mi primera integracion continua

on: push

jobs:
  compilar: 
    runs-on: ubuntu-latest
    steps: 
      - name: Descargar repositorio
        uses: actions/checkout@v2
      - name: Instalar jDK 11
        uses: actions/setup-java@v2
        with:
          java-version: "11"
          distribution: "adopt"     
      - name: Contruir con maven
        run: mvn clean package -DskipTests
      - name: Guardar paquete generado para el trabajo de despliegue
        uses: actions/upload-artifact@v4
        with:
          name: moviecards-java
          path: "${{github.workspace}}/target/*.jar"

  test:
    needs: compilar
    runs-on: ubuntu-latest
    steps:
      - name: Descargar repositorio
        uses: actions/checkout@v2
      - name: Instalar JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: "11"
          distribution: "adopt"
      - name: Instalar Chrome y ChromeDriver para pruebas end to end
        run: |
          wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb

          sudo dpkg -i google-chrome-stable_current_amd64.deb
          
          sudo apt --fix-broken install -y
          
          CHROMEDRIVER_VERSION=$(curl -sS https://chromedriver.storage.googleapis.com/LATEST_RELEASE)
          
          curl -L -o chromedriver.zip https://chromedriver.storage.googleapis.com/$CHROMEDRIVER_VERSION/chromedriver_linux64.zip
          
          unzip chromedriver.zip
          
          chmod +x chromedriver
          
          sudo mv chromedriver /usr/local/bin/
      - name: Ejecutar la aplicaci贸n para pruebas end to end
        run: mvn spring-boot:run & sleep 60
      - name: Ejecutar las pruebas unitarias, de integraci贸n y end to end
        run: mvn clean verify

  controlar_calidad:
    needs: test
    runs-on: self-hosted
    continue-on-error: true
    steps:
    - name: Descargar repositorio
      uses: actions/checkout@v2
    - name: Instalar JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: "11"
        distribution: "adopt"
    - name: Construir con Maven
      run: mvn clean package -DskipTests
    - name: Revisar la calidad con Sonarqube
      run: |
        mvn sonar:sonar -Dsonar.host.url=http://localhost:9000 -Dsonar.qualitygate.wait=true -Dsonar.login=admin -Dsonar.password=admin

  stage:
    runs-on: ubuntu-latest
    needs: controlar_calidad
    environment:
      name: 'Preproducci贸n'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Checkout c贸digo fuente
        uses: actions/checkout@v4

      - name: Descargar artefacto
        uses: actions/download-artifact@v4
        with:
          name: moviecards-java

      - name: PreDeploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'moviecards-orellano-pre'
          slot-name: 'Staging'
          package: '*.jar'
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_A6B738FE6F6F44879B52B3B2BD6324F4 }}


  deploy:
    runs-on: ubuntu-latest
    needs: stage
    if: github.ref=='refs/heads/master'
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
      
    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: moviecards-java
      
      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'moviecards-orellano'
          slot-name: 'Production'
          package: '*.jar'
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_C39CF51ADFCD4140BDE63483C688554D }}
  